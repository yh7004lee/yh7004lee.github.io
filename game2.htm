<!-- game2.htm -->
<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover">
  <title>말씀 빈칸 채우기 게임</title>
  <style>
    body {
      font-family: '맑은 고딕', sans-serif;
      background-color: #121212;
      color: #f0f0f0;
      margin: 0;
      padding: 5px 20px;
    }

    h3 {
      font-size: 1.4rem;
      margin-top: 20px;
    }

#verseText {
  margin: 30px 0;              /* 상하 마진 더 줌 */
  padding: 15px;               /* 안쪽 여백 추가 */
  font-size: 1.1rem;
  line-height: 2;              /* 줄간격 넉넉하게 */
      border: 2px dashed #888;
  border-radius: 12px;         /* 둥근 모서리 */
  background-color: #1a1a1a;   /* 약간 다른 배경색 */
}
    input.blank {
      width: 80px;
      font-size: 1rem;
      padding: 6px;
      border: 1px solid #888;
      border-radius: 6px;
      background-color: #1e1e1e;
      color: #f0f0f0;
      text-align: center;
    }

    button {
      display: block;
      width: 100%;
      margin: 15px 0;
      padding: 10px;
      font-size: 1.1rem;
      background-color: #444;
      color: #f0f0f0;
      border: none;
      border-radius: 10px;
      cursor: pointer;
    }

    button:hover {
      background-color: #666;
    }

    #result {
      text-align: center;
      font-weight: bold;
      font-size: 1.2rem;
    }

    #navButtons {
      display: flex;
      gap: 8px;
    }

    .navBtn {
      flex: 1;
      background-color: #444;
      color: #f0f0f0;
      border: none;
      border-radius: 10px;
      padding: 10px 0;
      font-size: 1rem;
    }

    .navBtn.active {
      background-color: #03dac6 !important;
      color: #000 !important;
      font-weight: bold;
    }
  </style>
</head>
<body>

  <div id="navButtons" style="margin-top: 10px;">
    <button class="navBtn" onclick="goToPrev()">이전</button>
    <button id="allVersesBtn" class="navBtn active">모든말씀</button>
    <button id="favVersesBtn" class="navBtn">즐겨찾기</button>
    <button class="navBtn" onclick="goToNext()">다음</button>
  </div>

  <h3 id="verseTitle">말씀 제목</h3>
  <div id="verseText">여기에 말씀이 표시됩니다.</div>

  <button id="checkBtn">✅ 정답 확인</button>
  <button id="restartBtn" style="display:none;">🔄 다시 시작하기</button>
  <button id="mainBtn">🏠 말씀암송 메인화면</button>

  <div id="result"></div>

  <script>



    const STORAGE_KEY_VERSES = 'savedVerses2';
    let allVerses = [];
    let verses = [];
    let currentStage = 0;
    let score = 0;
    let answerWords = [];
    let wrongAttempts = 0; // 👈 총 틀린 횟수 누적용

    const verseTitle = document.getElementById('verseTitle');
    const verseText = document.getElementById('verseText');
    const checkBtn = document.getElementById('checkBtn');
    const restartBtn = document.getElementById('restartBtn');
    const result = document.getElementById('result');
    const allVersesBtn = document.getElementById('allVersesBtn');
    const favVersesBtn = document.getElementById('favVersesBtn');

    function loadVerses() {
      const saved = localStorage.getItem(STORAGE_KEY_VERSES);
      if (!saved) return null;
      try {
        const parsed = JSON.parse(saved);
        return parsed.map((v, i) => ({
          ...v,
          id: i,
          title: v.title || '',
          text: v.text || '',
          textEn: v.textEn || '',
          favorite: v.favorite || false
        }));
      } catch {
        return null;
      }
    }

    function renderStage() {
if (currentStage >= verses.length) {
  const inputs = verseText.querySelectorAll('input.blank');
  inputs.forEach(input => {
    input.style.border = '';
  });

  verseTitle.textContent = '🎉 모든 스테이지 완료!';
  verseText.innerHTML = '';
  checkBtn.style.display = 'none';
  result.textContent = `수고하셨습니다!! `;
  restartBtn.style.display = 'block';
  return;
}

      const verse = verses[currentStage];
      verseTitle.textContent = verse.title || `스테이지 ${currentStage + 1}`;
      let words = verse.text.replace('[개역한글]', '').trim().split(/\s+/);
      const indexes = [];

      // 랜덤하게 4개의 인덱스를 선택
      while (indexes.length < 4) {
        const idx = Math.floor(Math.random() * words.length);
        if (!indexes.includes(idx) && !/^\[.*\]$/.test(words[idx])) indexes.push(idx);
      }

      answerWords = [];
      let html = words.map((w, i) => {
        if (indexes.includes(i)) {
          answerWords.push(w);
          return `<input type="text" class="blank" data-idx="${i}" />`;
        }
        return w;
      }).join(' ');

      verseText.innerHTML = html;
      result.textContent = '';
      checkBtn.style.display = 'block';
      restartBtn.style.display = 'none';
    }

checkBtn.addEventListener('click', () => {
  const inputs = [...verseText.querySelectorAll('input.blank')];
  const userAnswers = inputs.map(input => input.value.trim());

  let correct = true;
  inputs.forEach((input, idx) => {
    if (userAnswers[idx] === answerWords[idx]) {
      input.style.border = ''; // 정답이면 테두리 초기화
    } else {
      input.style.border = '2px dashed #ff5c5c'; // 예쁜 빨강색 점선
      input.style.borderRadius = '6px';
      correct = false;
    wrongAttempts++; // 👈 틀린 입력 하나당 카운트 증가
    }
  });

  if (correct) {
    score++;
    if (currentStage < verses.length - 1) {
      result.textContent = '🎉 정답입니다! 다음 스테이지로 넘어갑니다.';
      result.style.color = 'lightgreen';
      currentStage++;
      setTimeout(renderStage, 1500);
    } else {
      // 마지막 스테이지일 경우
      result.textContent = '🎉 마지막 스테이지 정답입니다!';
      result.style.color = 'lightgreen';
      currentStage++;
      setTimeout(renderStage, 1500);
    }
  } else {
    result.textContent = '❌ 정답이 아닙니다. 다시 시도해보세요!';
    result.style.color = 'orange';
  }
});

    restartBtn.addEventListener('click', () => {
      currentStage = 0;
      score = 0;
      renderStage();
    });

    document.getElementById('mainBtn').addEventListener('click', () => {
      window.location.href = 'bible.htm';
    });

    function goToPrev() {
      if (currentStage > 0) {
        currentStage--;
        renderStage();
      }
    }

    function goToNext() {
      if (currentStage < verses.length - 1) {
        currentStage++;
        renderStage();
      }
    }

    function setMode(isFavoriteOnly) {
      allVerses = loadVerses() || [];

      if (isFavoriteOnly) {
        const favList = allVerses.filter(v => v.favorite);
        if (favList.length === 0) {
          alert('즐겨찾기된 말씀이 없습니다.');
          return;
        }
        favVersesBtn.classList.add('active');
        allVersesBtn.classList.remove('active');
        verses = favList;
      } else {
        allVersesBtn.classList.add('active');
        favVersesBtn.classList.remove('active');
        verses = allVerses;
      }

      currentStage = 0;
      score = 0;
      renderStage();
    }

    allVersesBtn.addEventListener('click', () => setMode(false));
    favVersesBtn.addEventListener('click', () => setMode(true));

    window.onload = () => {
      allVerses = loadVerses();
      if (!allVerses || allVerses.length === 0) {
        verseTitle.textContent = '데이터가 없습니다. bible.htm에서 먼저 저장해주세요.';
        checkBtn.style.display = 'none';
      } else {
        setMode(false);
      }
    };
  </script>
</body>
</html>
