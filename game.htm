<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8" />
  <title>말씀 순서 맞추기 게임</title>
  <style>

    * {
      box-sizing: border-box;
    }

    body {
      font-family: '맑은 고딕', sans-serif;
      background-color: #121212;
      color: #f0f0f0;
      margin: 0;
      padding: 20px;
      overflow-x: hidden;
    }

    h2 {
      font-size: 1.8rem;
      text-align: left;
      color: #ffffff;
    }

    h3 {
      font-size: 1.6rem;
      text-align: left;
      color: #ffffff;
    }

    p {
     text-align: left;
      margin-bottom: 20px;
      font-size: 1.1rem;
    }

    #verse-container {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 12px;
      padding: 20px;
      background-color: #1e1e1e;
      border: 2px dashed #888;
      border-radius: 12px;
      min-height: 100px;
    }

    .word {
      font-size: 1.2rem;
      padding: 12px 18px;
      background-color: #2c2c2c;
      border: 2px solid #444;
      border-radius: 10px;
      cursor: grab;
      user-select: none;
      color: #f0f0f0;
      touch-action: none;
    }

    .word.dragging {
      opacity: 0.5;
    }
#bibleMemo,
#checkBtn {
  display: block;
  margin: 25px auto 10px auto;
  padding: 18px 0;     /* 위아래 패딩 크게 */
  font-size: 1.4rem;   /* 글자도 키움 */
  background-color: #444;
  color: #f0f0f0;
  border: none;
  border-radius: 12px; /* 모서리 약간 더 둥글게 */
  cursor: pointer;
  width: 100%;          /* 꽉 채우기 */

  box-sizing: border-box;
}
    #bibleMemo:hover,
    #checkBtn:hover {
      background-color: #666;
    }

    #result {
      margin-top: 20px;
      font-size: 1.2rem;
      font-weight: bold;
      text-align: center;
    }

    canvas {
      position: fixed;
      top: 0;
      left: 0;
      pointer-events: none;
      z-index: 1000;
    }

    

  </style>
</head>
<body>
  <h2>📖 말씀 순서 맞추기</h2>
  <h3 id="verseTitle" style=" margin-bottom:10px;">말씀 제목</h3>
  <p>단어를 올바른 순서로 드래그하여 배열해 보세요</p>

  <div id="verse-container"></div>

  <button id="checkBtn">✅ 정답 확인</button>
  <button id="bibleMemo">📖 말씀암송 돌아가기</button>
  <div id="result"></div>
   <canvas id="fireworks"></canvas>
  <button id="restartBtn" style="display:none; margin-top:20px;">🔄 다시 시작하기</button>

  <script>
   const canvas = document.getElementById("fireworks");
    const ctx = canvas.getContext("2d");
    let fireworks = [];
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    window.addEventListener('resize', () => {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    });
    const STORAGE_KEY_VERSES = 'savedVerses2'; // 실제 키값 맞춰서 사용
    let verses = [];
    let currentStage = 0;
    let score = 0;

    const verseTitle = document.getElementById('verseTitle');
    const verseContainer = document.getElementById('verse-container');
    const checkBtn = document.getElementById('checkBtn');
    const result = document.getElementById('result');
    const restartBtn = document.getElementById('restartBtn');

    // 로컬스토리지에서 데이터 불러오기
    function loadVerses() {
      const saved = localStorage.getItem(STORAGE_KEY_VERSES);
      if (!saved) return null;
      try {
        return JSON.parse(saved);
      } catch {
        return null;
      }
    }

    // 단어 드래그 요소 생성
    function createWordDiv(word) {
      const div = document.createElement('div');
      div.className = 'word';
      div.textContent = word;
      div.draggable = true;
      div.addEventListener('dragstart', () => div.classList.add('dragging'));
      div.addEventListener('dragend', () => div.classList.remove('dragging'));
      return div;
    }

    // 현재 스테이지 UI 업데이트
    function renderStage() {
      if (currentStage >= verses.length) {
        // 게임 종료
        verseTitle.textContent = '🎉 모든 스테이지 완료!';
        verseContainer.innerHTML = '';
        checkBtn.style.display = 'none';
        result.textContent = `당신의 점수: ${score} / ${verses.length}`;
        restartBtn.style.display = 'block';
        return;
      }

      const verse = verses[currentStage];
      verseTitle.textContent = verse.title || `스테이지 ${currentStage + 1}`;

      // text 단어 분리
      const words = verse.text.trim().split(/\s+/);
      const shuffled = words.sort(() => Math.random() - 0.5);

      verseContainer.innerHTML = '';
      shuffled.forEach(word => {
        verseContainer.appendChild(createWordDiv(word));
      });

      result.textContent = '';
      checkBtn.style.display = 'block';
      restartBtn.style.display = 'none';
    }

    // 드래그 오버 및 위치 찾기 함수 (기존 코드 활용)
    function getDragAfterElement(container, x) {
      const draggableElements = [...container.querySelectorAll('.word:not(.dragging)')];
      return draggableElements.reduce(
        (closest, child) => {
          const box = child.getBoundingClientRect();
          const offset = x - box.left - box.width / 2;
          if (offset < 0 && offset > closest.offset) {
            return { offset, element: child };
          } else {
            return closest;
          }
        },
        { offset: Number.NEGATIVE_INFINITY }
      ).element;
    }

    // 이벤트 등록
    verseContainer.addEventListener('dragover', e => {
      e.preventDefault();
      const dragging = document.querySelector('.dragging');
      const afterElement = getDragAfterElement(verseContainer, e.clientX);
      if (!afterElement) {
        verseContainer.appendChild(dragging);
      } else {
        verseContainer.insertBefore(dragging, afterElement);
      }
    });

    checkBtn.addEventListener('click', () => {
      const currentWords = [...verseContainer.querySelectorAll('.word')].map(el => el.textContent);
      const correctWords = verses[currentStage].text.trim().split(/\s+/);
      const isCorrect = JSON.stringify(currentWords) === JSON.stringify(correctWords);

      if (isCorrect) {
        score++;
          launchFireworks();
        result.textContent = '🎉 정답입니다! 다음 스테이지로 넘어갑니다.';
        result.style.color = 'lightgreen';
        currentStage++;
        setTimeout(renderStage, 1500); // 1.5초 후 다음 스테이지 로드
      } else {
        result.textContent = '❌ 아직 맞지 않았어요. 다시 시도해보세요!';
        result.style.color = 'orange';
      }
    });

    restartBtn.addEventListener('click', () => {
      currentStage = 0;
      score = 0;
      renderStage();
    });

    // 초기 실행
    window.onload = () => {
      verses = loadVerses();
      if (!verses || verses.length === 0) {
        verseTitle.textContent = '데이터가 없습니다. bible.htm에서 먼저 저장해주세요.';
        checkBtn.style.display = 'none';
      } else {
        renderStage();
      }
    };

    // 🔥 폭죽 관련 코드
    function launchFireworks() {
      fireworks = [];
      for (let i = 0; i < 5; i++) {
        createFirework(canvas.width / 2, canvas.height / 2);
      }
    }

function createFirework(x, y) {
  for (let i = 0; i < 120; i++) { // 파편 수 증가
    const angle = (Math.PI * 2 * i) / 120;
    const speed = Math.random() * 8 + 6; // 속도 증가
    fireworks.push({
      x: x,
      y: y,
      dx: Math.cos(angle) * speed,
      dy: Math.sin(angle) * speed,
      alpha: 1,
      color: `hsl(${Math.random() * 360}, 100%, 60%)`
    });
  }
}

function updateFireworks() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  fireworks.forEach((f, i) => {
    f.x += f.dx;
    f.y += f.dy;
    f.alpha -= 0.008; // 더 천천히 사라지게
    if (f.alpha <= 0) fireworks.splice(i, 1);
  });

  fireworks.forEach(f => {
    ctx.beginPath();
    ctx.arc(f.x, f.y, 5, 0, 2 * Math.PI); // 크기 증가
    ctx.fillStyle = f.color;
    ctx.globalAlpha = f.alpha;
    ctx.fill();
  });

  ctx.globalAlpha = 1;
}
    function animate() {
      updateFireworks();
      requestAnimationFrame(animate);
    }

    animate();


  </script>

<script>
  document.getElementById("bibleMemo").addEventListener("click", function () {
    location.href = "bible.htm";
  });
</script>
</body>
</html>
